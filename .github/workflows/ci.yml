name: CI

on:
  push:
    branches-ignore:
      - main

env:
  DATABASE_URL: postgresql://app_user:local-password@localhost:5432/test?schema=public

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node.js dependencies
        run: yarn

      - name: yarn lint
        run: |
          yarn format-and-lint:fix

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: app_user
          POSTGRES_PASSWORD: local-password
          POSTGRES_DB: test
          TZ: UTC
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: before cache
        run: |
          mkdir -p node_modules
          ls node_modules

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache/Restore node_modules
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      - name: Get yarn cache dir
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        id: cache-yarn
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache/Restore yarn cache
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-yarn.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-

      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn

      - name: override web env
        run: |
          echo NEXT_PUBLIC_API_HOST="https://template-master-api.wai-ware.com" > apps/web/.env

      - name: yarn build
        run: |
          yarn build

      - name: Create .env
        shell: bash
        run: |
          echo DATABASE_URL="postgresql://app_user:local-password@localhost:5432/test?schema=public" > packages/api/.env

      - name: yarn migrate
        run: |
          yarn turbo run migrate --filter=@repo/api

      - name: yarn test
        run: |
          yarn test
